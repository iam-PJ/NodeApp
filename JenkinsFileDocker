pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/iam-PJ/NodeApp.git']]) 
            }
        }

        stage('Build') {
            steps {
                echo "Building Docker image..."
                sh '''
                    docker build -t nodeimg .
                '''
            }
        }

        stage('Test') {
            steps {
                echo "Testing Docker container..."
                sh '''
                   #!/bin/bash

                    docker stop nodecontainer || true
                    docker rm nodecontainer || true
                    docker run -d --name nodecontainer -p 80:3000 nodeimg

                    # Wait for the container to be running
                    max_attempts=30
                    current_attempt=0

                    while [ $current_attempt -lt $max_attempts ]; do
                        container_status=$(docker ps --format "{{.Names}}: {{.Status}}" | grep 'nodecontainer')

                        if echo "$container_status" | grep -q "Up"; then
                            echo "Container 'nodecontainer' is running!"
                            break
                        else
                            echo "Waiting for the container to be running..."
                            sleep 5
                            current_attempt=$((current_attempt + 1))
                        fi
                    done

                    if [ $current_attempt -eq $max_attempts ]; then
                        echo "Container 'nodecontainer' did not start within the expected time."
                        exit 1
                    fi
                '''
            }
        }

        stage('Push To DockerHub') {
            steps {
                sh '''
                docker build -t nodeimg .
                echo "PASTE PAT TOKEN HERE" | docker login -u prathmeshj476  --password-stdin
                docker tag nodeimg prathmeshj476/newnodeimg 
                docker push prathmeshj476/newnodeimg 
                '''
            }
        }

        stage('Deploy') {
            steps {
                echo 'This Step is for Deploying the code'
                script {
                    sshagent(['Ubuntukey']) {
                        sh '''
                        ssh -o StrictHostKeyChecking=no ubuntu@PUBLICIP OF LIVESERVER "
                            cd /home/ubuntu/NodeApp/ &&
                            git pull https://github.com/iam-PJ/NodeApp.git &&
                            docker stop nodecontainer || true &&
                            docker rm nodecontainer || true &&
                            docker rmi prathmeshj476/newnodeimg || true &&
                            docker rmi newnodeimg || true &&
                            docker pull prathmeshj476/newnodeimg &&
                            docker run -d --name nodecontainer -p 80:3000 prathmeshj476/newnodeimg
                        "
                        '''
                    }
                }
            }
        }
    }
}
